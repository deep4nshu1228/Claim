from sklearn.neural_network import MLPRegressor
mlp = Pipeline([
    ("pre", pre),
    ("reg", MLPRegressor(hidden_layer_sizes=(64,32),
                         alpha=1e-3,
                         learning_rate_init=1e-3,
                         max_iter=1000,
                         random_state=42))
])

from sklearn.svm import SVR
svr = Pipeline([
    ("pre", pre),
    ("reg", SVR(kernel="rbf", C=10, gamma="scale", epsilon=0.1))
])


from sklearn.neighbors import KNeighborsRegressor
knn = Pipeline([
    ("pre", pre),
    ("reg", KNeighborsRegressor(n_neighbors=5, weights="distance"))
])


svr = SVR(kernel="rbf", C=10, gamma="scale", epsilon=0.1)
knn = KNeighborsRegressor(n_neighbors=5, weights="distance")






import matplotlib.pyplot as plt

plants = df['plant'].unique()

plt.figure(figsize=(8,6))

for plant in plants:
    plant_df = df[df['plant'] == plant]
    plt.scatter(plant_df['real'], plant_df['predicted'], label=f'Plant {plant}')

plt.xlabel('Real')
plt.ylabel('Predicted')
plt.title('Predicted vs Real by Plant')
plt.legend()
plt.show()



x = np.array([1, 2, 3, 4, 5 ,6, 7, 8])
y_poly = np.polyval(coeffs, x)
 s
 
