import pandas as pd

def create_summary(df, dispatch_month, start_warranty_month, end_warranty_month):
    filtered_df = df[
        (df["dispatch_month"] == dispatch_month) &
        (df["warranty_month"] >= start_warranty_month) &
        (df["warranty_month"] <= end_warranty_month)
    ]
    return filtered_df.groupby("warranty_month")["cost"].sum().reset_index()

# Your dispatch months list
dispatch_months = ['2025-05', '2025-06', '2025-07']  
start_warranty_month = '2025-06'
end_warranty_month = '2025-08'

all_tables = []

for disp_month in dispatch_months:
    pred_summary = create_summary(prediction_df, disp_month, start_warranty_month, end_warranty_month)
    act_summary = create_summary(actual_df, disp_month, start_warranty_month, end_warranty_month)
    
    pred_summary = pred_summary.rename(columns={"cost": f"pred_cost_{disp_month}"})
    act_summary = act_summary.rename(columns={"cost": f"real_cost_{disp_month}"})
    
    merged = pd.merge(act_summary, pred_summary, on="warranty_month", how="outer").fillna(0)
    merged[f"diff_%_{disp_month}"] = ((merged[f"pred_cost_{disp_month}"] - merged[f"real_cost_{disp_month}"]) / 
                                      merged[f"real_cost_{disp_month}"].replace(0, 1)) * 100

    merged = merged.sort_values("warranty_month").reset_index(drop=True)
    all_tables.append(merged)

# Merge all dispatch month tables side-by-side on warranty_month
from functools import reduce
final_table = reduce(lambda left, right: pd.merge(left, right, on="warranty_month", how="outer").fillna(0), all_tables)
final_table = final_table.sort_values("warranty_month").reset_index(drop=True)


# Format numbers with commas and diff% with 2 decimals + %
for DISP_MONTH in DISPATCH_MONTHS:
    FINAL_TABLE[f"PRED_COST_{DISP_MONTH}"] = FINAL_TABLE[f"PRED_COST_{DISP_MONTH}"].map('{:,.0f}'.format)
    FINAL_TABLE[f"REAL_COST_{DISP_MONTH}"] = FINAL_TABLE[f"REAL_COST_{DISP_MONTH}"].map('{:,.0f}'.format)
    FINAL_TABLE[f"DIFF_%_{DISP_MONTH}"] = FINAL_TABLE[f"DIFF_%_{DISP_MONTH}"].map(lambda x: f"{x:.2f}%")



# Save to Excel
final_table.to_excel("side_by_side_cost_summary.xlsx", index=False)

print("Side-by-side summary saved to side_by_side_cost_summary.xlsx")
