import numpy as np
import matplotlib.pyplot as plt

# Check the distribution of actual values
print(f"Train actual - Min: {y_train.min()}, Max: {y_train.max()}, Mean: {y_train.mean()}")
print(f"Test actual - Min: {y_test.min()}, Max: {y_test.max()}, Mean: {y_test.mean()}")

# Plot distributions
plt.figure(figsize=(12, 4))
plt.subplot(1, 2, 1)
plt.hist(y_train, bins=30, alpha=0.7, label='Train')
plt.title('Training Data Distribution')
plt.subplot(1, 2, 2)
plt.hist(y_test, bins=30, alpha=0.7, label='Test')
plt.title('Test Data Distribution')
plt.show()



import pandas as pd

# Example df
# df = pd.DataFrame({"WARRANTY_COST": [100, 120, 130, 125, 140]})

# Create lag features
df['lag_1'] = df['WARRANTY_COST'].shift(1)
df['lag_2'] = df['WARRANTY_COST'].shift(2)
df['lag_3'] = df['WARRANTY_COST'].shift(3)

# Backward differences
df['backward_diff_lag1'] = df['lag_1'] - df['lag_2']
df['backward_diff_lag2'] = df['lag_2'] - df['lag_3']

# Trend slope over last 3 intervals (same as your function)
df['trend_slope'] = ((df['lag_1'] - df['lag_2']) + (df['lag_2'] - df['lag_3'])) / 2

# Time index (starting at 1)
df['time_index'] = range(1, len(df) + 1)

print(df)
 
